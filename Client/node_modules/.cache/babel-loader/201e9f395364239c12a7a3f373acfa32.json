{"ast":null,"code":"import _slicedToArray from \"/home/jedi/Documents/React ALL/Chat App/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jedi/Documents/React ALL/Chat App/Client/src/Components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from '../InfoBar/InfoBar';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {//callback error handling\n    });\n    return () => {\n      socket.emit('diconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // function for sending message\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  console.log(messages, message);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/jedi/Documents/React ALL/Chat App/Client/src/Components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,YAAP;AAGA,IAAIC,MAAJ;;AAEC,MAAMC,IAAI,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACHP,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QACnBQ,IADmB;AAAA,QACdC,OADc;;AAAA,qBAEHT,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAEnBU,IAFmB;AAAA,QAEdC,OAFc;;AAAA,qBAGGX,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGnBY,OAHmB;AAAA,QAGXC,UAHW;;AAAA,qBAIKb,QAAQ,CAAC,EAAD,CAJb;AAAA;AAAA,QAInBc,QAJmB;AAAA,QAIVC,WAJU;;AAK1B,QAAMC,QAAQ,GAAG,gBAAjB;AACAf,EAAAA,SAAS,CAAC,MAAI;AAAA,+BACUC,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADV;AAAA,UACHV,IADG,sBACHA,IADG;AAAA,UACEE,IADF,sBACEA,IADF;;AAEVD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAX,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAA+B,MAAI,CAC/B;AACH,KAFD;AAIA,WAAO,MAAI;AACPL,MAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAKH,GAhBQ,EAgBP,CAACJ,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CAhBO,CAAT;AAkBAjB,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBT,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT,CAxB0B,CA8B9B;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGZ,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAkC,MAAI;AAACC,QAAAA,UAAU,CAAC,EAAD,CAAV;AAAe,OAAtD;AACH;AACJ,GALD;;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAqBF,OAArB;AAEQ,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAaP,CArDA;;AAuDD,eAAeJ,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport queryString from \"query-string\"\nimport io from \"socket.io-client\"\n\nimport InfoBar from '../InfoBar/InfoBar'\n\nimport './Chat.css'\n\n\nlet socket;\n\n const Chat =({ location })=> {\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [message,setMessage] = useState('')\n    const [messages,setMessages] = useState([])\n    const ENDPOINT = 'localhost:5000'\n    useEffect(()=>{\n        const {name,room} = queryString.parse(location.search)\n        setName(name)\n        setRoom(room)\n       \n        socket = io(ENDPOINT)\n        \n        socket.emit('join',{name,room},()=>{\n            //callback error handling\n        })\n\n        return ()=>{\n            socket.emit('diconnect')\n            socket.off()\n        }\n\n    },[ENDPOINT,location.search])\n\n    useEffect(()=>{\n        socket.on('message',(message)=>{\n            setMessages([...messages,message])\n        })\n    },[messages])\n\n// function for sending message\nconst sendMessage = (event) =>{\n    event.preventDefault()\n    if(message){\n        socket.emit('sendMessage',message,()=>{setMessage('')})\n    }\n}\n\nconsole.log(messages,message)\n\n        return(\n            <div className=\"outerContainer\">\n                <div className=\"container\">\n                    <InfoBar room={room}/>\n                    {/* <input \n                        value={message} \n                        onChange={(event)=>{setMessage(event.target.value)}}\n                         onKeyPress={(event)=>event.key==='Enter'?sendMessage(event):null}\n                    /> */}\n                </div>\n            </div>\n        )\n    \n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}
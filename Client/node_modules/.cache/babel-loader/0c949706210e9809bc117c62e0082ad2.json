{"ast":null,"code":"import _slicedToArray from \"/home/jedi/Documents/React ALL/Chat App/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jedi/Documents/React ALL/Chat App/Client/src/Components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nimport './Chat.css';\nlet socket;\nlet err = false;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        messages = _useState10[0],\n        setMessages = _useState10[1];\n\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    }, errormessage => {\n      // console.log(errormessage)\n      setError(errormessage);\n      err = true;\n    });\n    return () => {\n      socket.emit('diconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); // function for sending message\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  console.log(messages, message);\n\n  if (!err) {\n    return React.createElement(\"div\", {\n      className: \"outerContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(InfoBar, {\n      room: room,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Messages, {\n      messages: messages,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Input, {\n      message: message,\n      setMessage: setMessage,\n      sendMessage: sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  } else {\n    return null;\n  }\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/jedi/Documents/React ALL/Chat App/Client/src/Components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","err","Chat","location","name","setName","room","setRoom","error","setError","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","errormessage","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport queryString from \"query-string\"\nimport io from \"socket.io-client\"\n\nimport InfoBar from '../InfoBar/InfoBar'\nimport Input from \"../Input/Input\"\nimport Messages from \"../Messages/Messages\"\n\nimport './Chat.css'\n\n\nlet socket;\nlet err =false\n const Chat =({ location })=> {\n    const [name,setName] = useState('')\n    const [room,setRoom] = useState('')\n    const [error,setError] = useState('')\n    const [message,setMessage] = useState('')\n    const [messages,setMessages] = useState([])\n    const ENDPOINT = 'localhost:5000'\n    useEffect(()=>{\n        const {name,room} = queryString.parse(location.search)\n        setName(name)\n        setRoom(room)\n       \n        socket = io(ENDPOINT)\n        \n        socket.emit('join',{name,room},(errormessage)=>{\n            // console.log(errormessage)\n            setError(errormessage)\n            err= true\n        })\n\n        return ()=>{\n            socket.emit('diconnect')\n            socket.off()\n        }\n\n    },[ENDPOINT,location.search])\n\n    useEffect(()=>{\n        socket.on('message',(message)=>{\n            setMessages([...messages,message])\n        })\n    },[messages])\n\n// function for sending message\nconst sendMessage = (event) =>{\n    event.preventDefault()\n    if(message){\n        socket.emit('sendMessage',message,()=>{setMessage('')})\n    }\n}\n\nconsole.log(messages,message)\n        if(!err){\n            return(\n                <div className=\"outerContainer\">\n                    <div className=\"container\">\n                        <InfoBar room={room}/>\n                        <Messages messages={messages} name={name}/>\n                        <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n                    </div>\n                </div>\n            )\n        }else{\n            return null\n        }\n        \n    \n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}